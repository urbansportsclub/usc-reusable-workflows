name: Build And Push Docker Images

on:
  workflow_call:
    outputs:
       image_version: 
         value: ${{ jobs.buildandpushdocker.outputs.image_version }}
    inputs:
      dockerfile_path:
        required: false
        type: string
        description: "Path of the dockerfile" 
        default: "Dockerfile"
      image_name:
        required: true
        type: string
        description: "Name of the docker image" 
        default: ""
      platforms:
        required: false
        type: string
        description: "List of image platforms"
        default: "linux/amd64"
      auth_registry:
        required: false
        type: string
        description: "Registry Address to pull images, used on gcloud auth configure-docker" 
        default: "eu.gcr.io,europe-west3-docker.pkg.dev"
      registry:
        required: false
        type: string
        description: "Registry Address for push images" 
        default: "eu.gcr.io"
      repository:
        required: true
        type: string
        description: "Repository Name" 
        default: "usc"
      project_id:
        required: false
        type: string
        description: "GCP Project ID" 
        default: "urbansportsclub-dev"
      image_tag:
        required: false
        type: string
        description: "Tag for Docker image"
        default: ""
      context:
        required: false
        type: string
        description: "Docker build context" 
        default: "."
      target:
        required: false
        type: string
        description: "Sets the target stage to build"
      enable_summary:
        type: boolean
        default: false
        required: false
      push:
        type: boolean
        default: true
        required: false        
    secrets:
      build_args:
        required: false
        description: "Build args"
      secret_args:
        required: false
        description: "Secret args to be passed to the docker build"

jobs:
  buildandpushdocker:
    name: Build and Push
    runs-on: [self-hosted, dind]

    outputs:
       image_version: ${{ steps.subscriber_meta.outputs.version }}

    env: 
      SKIP_SCE_VALIDATION: false

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Check if SCE validator step should be skipped
      run: echo "SKIP_SCE_VALIDATION=$(git log -1 --pretty=%B | grep -q '\[skip-sce-validation\]' && echo true || echo false)" >> $GITHUB_ENV

    - name: SCE validator
      if: !env.SKIP_SCE_VALIDATION
      uses: urbansportsclub/usc-github-actions/SCE-validator@main

    - name: Docker subscriber meta
      id: subscriber_meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ inputs.registry }}/${{ inputs.project_id }}/${{ inputs.repository }}/${{ inputs.image_name }}
        flavor: |
          latest=auto
        tags: |
          type=raw,priority=10,value=${{ inputs.image_tag }},enable=${{ inputs.image_tag != '' }}
          type=semver,priority=20,pattern={{version}}
          type=semver,priority=21,pattern=v{{major}}
          type=schedule,priority=30
          type=sha,priority=40

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
      with:
        image: 'europe-west3-docker.pkg.dev/urbansportsclub-dev/docker-hub/tonistiigi/binfmt:latest'
      if: inputs.platforms != 'linux/amd64'

    - name: Configure Docker Auth
      run: |-
        gcloud auth configure-docker ${{ inputs.auth_registry }}

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v3
      with:
          install: true
          buildkitd-flags: --debug
          driver-opts: |
            image=europe-west3-docker.pkg.dev/urbansportsclub-dev/docker-hub/moby/buildkit:master

    - name: Build and push
      uses: docker/build-push-action@v6
      env:
        DOCKER_BUILD_SUMMARY: ${{ inputs.enable_summary }}
      with:
        context: ${{ inputs.context }}
        file: ${{ inputs.dockerfile_path }}
        platforms: ${{ inputs.platforms }}
        target: ${{ inputs.target }}
        build-args: |
          ${{ secrets.build_args }}
        push: ${{ inputs.push }}
        tags: ${{ steps.subscriber_meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new
        secrets: |
          ${{ secrets.secret_args }}
