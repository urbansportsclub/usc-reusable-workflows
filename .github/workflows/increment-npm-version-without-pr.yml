---
name: Increment NPM Version
on:
  workflow_call:
    inputs:
      release_type:
        description: 'Release type. Possible values: major, minor, patch'
        required: true
        type: string

jobs:
  bump_version:
    runs-on: [self-hosted, dind]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install semver
        run: |
          npm install -g semver

      - name: Fetch latest version main
        run: |
          git fetch origin main
      
      - name: Get latest version from main
        id: main_version
        run: |
          git checkout origin/main -- package.json
          MAIN_VERSION=$(jq -r '.version' package.json)
          echo "MAIN_VERSION=$MAIN_VERSION" >> $GITHUB_ENV
      
      - name: Restore PR package.json
        run: |
          git checkout ${{ github.head_ref }}

      - name: Get current PR version
        id: pr_version
        run: |
          PR_VERSION=$(jq -r '.version' package.json)
          echo "PR_VERSION=$PR_VERSION" >> $GITHUB_ENV
   
      - name: Compare versions semantically
        id: check_conflict
        run: |
          if semver -r "${{ env.PR_VERSION }}" -le "${{ env.MAIN_VERSION }}"; then
            echo "VERSION_CONFLICT=true" >> $GITHUB_ENV
          else
            echo "VERSION_CONFLICT=false" >> $GITHUB_ENV

      - name: Overwrite PR version with main version
        if: ${{ env.VERSION_CONFLICT }} == 'true'
        run: |
          echo "Overwriting PR version with main version"
          jq --arg new_version "$MAIN_VERSION" '.version = $new_version' package.json > tmp.json && mv tmp.json package.json

      - name: Bump version in package.json
        if: ${{ env.VERSION_CONFLICT }} == 'true'
        run: |
          npm version ${{ inputs.release_type }} --no-git-tag-version

      - name: Commit bumped version
        run: |
          git config user.email "devops@urbansportsclub.com"
          git config user.name "DevOpsFit"
          git add package.json
          git commit -m "auto-bump: resolve version conflict with new bump" || echo "No changes to commit"

      - name: Show final version
        run: |
          echo "Final version: $(jq -r '.version' package.json)"

      - name: Push changes
        run: |
          git push origin HEAD
