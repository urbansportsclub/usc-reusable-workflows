name: Build and Types
on:
  workflow_call:
    secrets:
      GH_PACKAGES_TOKEN:
        required: true
    inputs:
      WORKING_DIRECTORY:
        type: string
        default: '.'
        required: false
      BUILD_CMD_FLAG:
        description: Optional flag to pass to `build` command script (e.g. :backend / :frontend / :all, etc.)
        type: string
        default: ''
        required: false
      CI:
        type: boolean
        default: true
        required: false

jobs:
  build_and_types:
    name: Build and TSC
    runs-on: [self-hosted, nonroot]
    defaults:
      run:
        working-directory: ${{ inputs.WORKING_DIRECTORY }}

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      # Restore NPM cache
      - name: Restore node_modules
        uses: actions/cache@v4
        id: node-cache
        with:
          path: |
            ./node_modules
            /home/runner/.cache/Cypress
          key: node-cache-${{ runner.os }}-${{ hashFiles('./yarn.lock') }}
 
      # Restore Next.js cache
      - name: Restore .next
        uses: actions/cache@v4
        with:
          path: |
            ${{ github.workspace }}/.next/cache
          key: next-cache-${{ runner.os }}-${{ hashFiles('./yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            next-cache-${{ runner.os }}-${{ hashFiles('./yarn.lock') }}-

      - name: Set Node version
        uses: actions/setup-node@v4
        with:
          node-version-file: ${{ inputs.WORKING_DIRECTORY }}/.nvmrc
          registry-url: 'https://npm.pkg.github.com'

      - name: Setup Yarn
        run: npm install -g yarn

      - name: Install NPM dependencies
        if: steps.node-cache.outputs.cache-hit != 'true'
        run: yarn --frozen-lockfile
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GH_PACKAGES_TOKEN }}

      - name: Run build
        run: ${{ format('{0} {1}{2}', 'yarn', 'build', inputs.BUILD_CMD_FLAG) }}
        env:
          CI: ${{ inputs.CI }}
