---
name: Sonarqube

on:
  workflow_call:
    inputs:
      url:
        required: false
        type: string
        default: https://sonarqube.svc.urbansportsclub.tech
      enable_quality_gate:
        required: false
        type: boolean
        default: true
      download_coverage_artifact:
        required: false
        type: boolean
        default: false
      coverage_artifact_name:
        required: false
        type: string
        default: coverage-artifact
      artifact_download_path:
        required: false
        type: string
      reference_branch:
        required: false
        type: string

jobs:
  build:
    name: Build
    runs-on: [self-hosted, nonroot]
    env:
      REFERENCE_BRANCH: ${{ inputs.reference_branch || github.event.repository.default_branch }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Download code coverage results
        if: inputs.download_coverage_artifact == true
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.coverage_artifact_name }}
          path: ${{inputs.artifact_download_path}}

      - name: Scan
        uses: sonarsource/sonarqube-scan-action@master
        if: ${{ always() && github.ref == format('refs/heads/{0}', env.REFERENCE_BRANCH) }}
        with:
          args: -Dsonar.projectVersion=${{ github.sha }}
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ inputs.url }}

      - name: Scan
        uses: sonarsource/sonarqube-scan-action@master
        if: ${{ always() && github.ref != format('refs/heads/{0}', env.REFERENCE_BRANCH) }}
        with:
          args: >
            -Dsonar.projectVersion=${{ github.sha }}
            -Dsonar.newCode.referenceBranch=${{ env.REFERENCE_BRANCH }}
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ inputs.url }}

      # If you wish to fail your job when the Quality Gate is red, uncomment the
      # following lines. This would typically be used to fail a deployment.
      - uses: sonarsource/sonarqube-quality-gate-action@master
        if: ${{ github.ref != format('refs/heads/{0}', env.REFERENCE_BRANCH) && inputs.enable_quality_gate == true }}
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
