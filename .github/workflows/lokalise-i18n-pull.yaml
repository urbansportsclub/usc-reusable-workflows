name: Lokalise I18N Pull
run-name: Pull translation keys down from Lokalise [${{ github.ref_name }}]
on:
  workflow_call:
    inputs:
      LOKALISE_PROJECT_ID:
        required: true
        description: "Auto-generated Lokalise Project ID"
        type: string
      DESTINATION_DIR:
        required: true
        description: "Directory to save the downloaded i18n keys. !No trailing slash! eg. ./src/lib/i18n"
        type: string
      GITHUB_PR_BRANCH_NAME:
        required: true
        description: "Name of the branch to create for the pull request to main"
        type: string
      GH_TEAM_NAME:
        required: false
        default: ""
        description: "GitHub team to tag in the pull request to, e.g. urbansportsclub/member-acquisition-team"
        type: string
    secrets:
      LOKALISE_API_TOKEN:
        required: true
        description: "Lokalise API token for authentication"

jobs:
  download-i18n-files:
    name: Unzip i18n directory from Lokalise and open PR
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Pull Zip of i18n keys down from Lokalise
        id: download-lokalise-i18n
        env:
          ENV_LOKALISE_PROJECT_ID: ${{ inputs.LOKALISE_PROJECT_ID }}
          ENV_LOKALISE_API_TOKEN: ${{ secrets.LOKALISE_API_TOKEN }}
          ENV_DESTINATION_DIR: ${{ inputs.DESTINATION_DIR }}
        run: |
          echo "Downloading Zip of i18n keys from Lokalise..."

          RESPONSE=$(curl -v "https://api.lokalise.com/api2/projects/$ENV_LOKALISE_PROJECT_ID/files/download" \
            --header "x-api-token: $ENV_LOKALISE_API_TOKEN" \
            --header "accept: application/json" \
            --header "content-type: application/json" \
            --data "{
              \"format\": \"json\",
              \"original_filenames\": false,
              \"filter_data\": [
                \"translated\"
              ],
              \"add_newline_eof\": false,
              \"export_sort\": \"a_z\",
              \"export_empty_as\": \"empty\",
              \"replace_breaks\": true
            }")

            RESP_ERR_STATUS=$(echo "$RESPONSE" | jq -r '.error.code')
            RESP_ERR_MSG=$(echo "$RESPONSE" | jq -r '.error.message')

            if [ "$RESP_ERR_STATUS" -ne 200 ]; then
              echo "Request failed with status: $RESP_ERR_STATUS"
              echo "Error Message: $RESP_ERR_MSG"
              exit 2
            fi            

            RESP_SUCCES_BUNDLE_URL=$(echo "$RESPONSE" | jq -r '.bundle_url')

            if [[ -n $RESP_SUCCES_BUNDLE_URL ]]; then
              echo "Download URL: $RESP_SUCCES_BUNDLE_URL"

              ZIP_FILE_NAME="lokalise_i18n_keys_${{ github.run_id }}.zip"
              echo "Downloading Zip file to $ZIP_FILE_NAME..."
              curl -L -o "$ZIP_FILE_NAME" "$RESP_SUCCES_BUNDLE_URL"
              
              echo "Unzipping $ZIP_FILE_NAME..."
              unzip -o -j "$ZIP_FILE_NAME" 'locale/*.json' -d "$ENV_DESTINATION_DIR"
              
              echo "Unzipped files to $ENV_DESTINATION_DIR"
              rm "$ZIP_FILE_NAME"
            fi

      - name: Set up Git Bot User
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Create Pull Request for i18n key changes
        env:
          GH_TOKEN: ${{ github.token }}
          ENV_DESTINATION_DIR: ${{ inputs.DESTINATION_DIR }}
          BASE_REF_NAME: ${{ github.event.repository.default_branch }}
          GITHUB_NEW_BRANCH_NAME: ${{ inputs.GITHUB_PR_BRANCH_NAME }}-Lokalise-${{ github.run_id }}-${{ github.run_attempt }}
        run: |
          # Current timestamp for metadata
          NOW=$(date +'%Y-%m-%dT%H:%M:%S')

          git checkout -b ${{ env.GITHUB_NEW_BRANCH_NAME }}
          git add "$ENV_DESTINATION_DIR"/*.json

          if [[ -z $(git status --untracked-files=no --porcelain) ]]; then
            echo "No changes to commit"
          else
            git commit -m "Latest translation values downloaded from Lokalise - $NOW"
            git push --set-upstream origin ${{ env.GITHUB_NEW_BRANCH_NAME }}
            gh pr create -B ${{ env.BASE_REF_NAME }} -H ${{ env.GITHUB_NEW_BRANCH_NAME }} \
            -t "Lokalise translation updates - $NOW" \
            -b "Translation updates from Lokalise, please review and merge ASAP @${{ inputs.GH_TEAM_NAME }}"
          fi
