name: Deploy Helm Charts To Kubernetes Cluster

on:
  workflow_call:
    inputs:
      gke_zone:
        required: false
        type: string
        default: "europe-west3"
      gke_cluster:
        required: true
        type: string
        description: "Kubernetes Cluster Name"
        default: "internal"
      stage:
        required: true
        type: string
        description: "dev, staging, prod, etc."
        default: "dev"
      override_values_stage:
        required: false
        type: string
        description: "Override stage value for passing values file. e.g values.<override_values_stage>.yaml"
        default: ""
      chart_name:
        required: false
        type: string
        description: "Helm chart name."
        default: "usc-test-helm"
      chart_version:
        required: false
        type: string
        description: "Helm chart version to deploy. Defaults to latest."
        default: "latest"
      image_version:
        required: false
        type: string
        description: "The docker image you want to deploy. Defaults to latest."
        default: "latest"
      namespace:
        required: true
        type: string
        description: "Kubernetes namespace"
        default: "default"
      sops:
        required: false
        type: boolean
        description: "Enable/Disable Helm Secrets(sops) Plugin"
        default: false
      chart_path:
        required: false
        type: string
        description: "Chart location defaults to ."
        default: "."
      project_id:
        required: false
        type: string
        description: "Project id for gcloud (whenever you deploy to)."
        default: "urbansportsclub-dev"
      registry_project_id:
        required: false
        type: string
        description: "Project id for gcloud registry (currently always dev)."
        default: "urbansportsclub-dev"        
      helm_args:
        required: false
        type: string
        description: "Additional Helm arguments"
      helm_repositories:
        required: false
        type: string
        description: "JSON object of Helm repositories, keys as repo name and value as repo URL"
      runner:
        required: false
        type: string
        description: "Runner type [ deploy, deploylive ] (Default deploy)."
        default: "deploy"


jobs:
  deploy-to-k8s:
    name: Deploy to Kubernetes Cluster
    runs-on: [self-hosted, "${{ inputs.runner }}"]
    environment: ${{ inputs.stage }}
    steps:
      - uses: actions/checkout@v3

      # Set up k8s for dev cluster
      - name: Set up K8s config
        run: |-
          gcloud container clusters get-credentials ${{ inputs.gke_cluster }} --region ${{ inputs.GKE_ZONE }} --project ${{ inputs.project_id }}

      # Get stage value from override_values_stage
      # GITHUB_ENV is environment file and variables from GITHUB_ENV can be accessed by `env`.
      - name: Get stage value
        run: |-
          if [ "${{ inputs.override_values_stage }}" == "" ]; then
            echo "VALUES_STAGE=${{ inputs.stage }}" >> $GITHUB_ENV
          else
            echo "VALUES_STAGE=${{ inputs.override_values_stage }}" >> $GITHUB_ENV
          fi

      # Configure gcloud Auth
      - name: Configure gcloud Auth
        run: |-
          gcloud auth print-access-token --project ${{ inputs.registry_project_id }} | helm registry login -u oauth2accesstoken --password-stdin https://europe-west3-docker.pkg.dev

      # Define additional Helm repositories
      - name: Define Helm repositories
        if: inputs.helm_repositories != ''
        run: |-
          set -x
          HELM_REPOS=$(echo '${{ inputs.helm_repositories }}' | jq -r 'to_entries[] | "\(.key) \(.value)"')
          ORIG_IFS=$IFS
          IFS=$'\n'
          read -d '' -r -a HELM_REPO_ARGS < <(echo $HELM_REPOS && printf '\0')
          for args in ${HELM_REPO_ARGS[@]}; do
            IFS=$ORIG_IFS
            read -d '' -r -a ARGS < <(echo $args && printf '\0')
            helm repo add ${ARGS[@]}
          done

      # Build dependency for helm-library
      - name: Helm dependency build
        run: |-
          for i in `ls -1 charts/`; do
            helm dependency build charts/$i/
          done

      # Deploy to the GKE cluster - with sops
      - name: Deploy
        if: inputs.sops == true
        run: |-
          helm secrets upgrade --install ${{ inputs.chart_name }} ${{ inputs.chart_path }} -n ${{ inputs.namespace }} --create-namespace -f ${{ inputs.chart_path }}/values.yaml -f ${{ inputs.chart_path }}/values.${{ env.VALUES_STAGE }}.yaml -f ${{ inputs.chart_path }}/secrets.${{ inputs.stage }}.yaml --set image.tag=${{ inputs.image_version }} ${{ inputs.helm_args }}

      # Deploy to the GKE cluster - without sops
      - name: Deploy
        if: inputs.sops == false
        run: |-
          helm upgrade --install ${{ inputs.chart_name }} ${{ inputs.chart_path }} -n ${{ inputs.namespace }} --create-namespace -f ${{ inputs.chart_path }}/values.yaml -f ${{ inputs.chart_path }}/values.${{ env.VALUES_STAGE }}.yaml --set image.tag=${{ inputs.image_version }} ${{ inputs.helm_args }}
