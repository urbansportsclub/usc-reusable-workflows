---
name: Publish Package

on:
  workflow_call:
    secrets:
      NODE_AUTH_TOKEN:
        required: true
    inputs:
      workspace:
        description: "Name of the workspace to publish"
        required: false
        type: string
      working-directory:
        description: "Path to the project"
        required: false
        default: '.'
        type: string

jobs:
  build:
    runs-on: [self-hosted, dind]
    steps:
      - uses: actions/checkout@v4

      - name: Detect package manager
        id: detect_pkg_mgr
        uses: urbansportsclub/usc-reusable-workflows/.github/actions/detect-package-manager@gt_JsPackageManager
        with:
          working-directory: ${{ inputs.working-directory }}

      - uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          registry-url: "https://npm.pkg.github.com"
          scope: "@urbansportsclub"
          always-auth: true
          # Used to authenticate and publish private npm packages to our private registry in Github
          token: ${{ secrets.NODE_AUTH_TOKEN }}
        env:
          # To ensure that the token is available for npm publish
          NODE_AUTH_TOKEN: ${{ secrets.NODE_AUTH_TOKEN }}

      - name: Enable Corepack
        if: ${{ steps.detect_pkg_mgr.outputs.node_cmd_mode == 'yarn' }}
        run: |
          corepack enable
          corepack prepare yarn@4.2.2 --activate
          corepack prepare pnpm@latest --activate

      - name: Install dependencies
        run: |
          case "${{ steps.detect_pkg_mgr.outputs.node_cmd_mode }}" in
            yarn)
              yarn install
              ;;
            pnpm)
              pnpm install ${{ inputs.workspace && format('--filter {0}', inputs.workspace) }}
              ;;
            npm|*)
              npm install
              ;;
          esac

      - name: Build package
        run: |
          CMD=${{ steps.detect_pkg_mgr.outputs.node_cmd_mode }}
          if [ "$CMD" = "pnpm" ]; then
            pnpm run build${{ inputs.workspace && format(' --filter {0}', inputs.workspace) }}
          else
            $CMD run build
          fi

      - name: Publish package
        run: |
          PM=${{ steps.detect_pkg_mgr.outputs.node_cmd_mode }}
          if [ "$PM" = "yarn" ]; then echo "Using Yarn v2+ publish"
            yarn workspace ${{ inputs.workspace }} npm publish
          elif [ "$PM" = "pnpm" ] && [ -n "${{ inputs.workspace }}" ]; then "Using pnpm publish"
            pnpm --filter "${{ inputs.workspace }}" publish
          elif [ -n "${{ inputs.workspace }}" ]; then echo "Using npm publish"
            npm publish
          else
            case "$PM" in
              pnpm) pnpm publish ;; 
              yarn) yarn publish ;; 
              npm|*) npm publish ;; 
            esac
          fi
