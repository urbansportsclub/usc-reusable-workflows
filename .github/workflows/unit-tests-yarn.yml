name: Unit Tests - Yarn
on:
  workflow_call:
    inputs:
      REPO_NAME:
        required: true
        type: string
      USE_CODECOV:
        required: false
        type: boolean
        default: true
      UPLOAD_ARTIFACTS:
        required: false
        type: boolean
        default: false
      WORKING_DIRECTORY:
        type: string
        default: "."
        required: false
    secrets:
      GH_PACKAGES_TOKEN:
        required: true
      CODECOV_TOKEN:
        required: false

jobs:
  unit_tests:
    name: Unit Tests (RTL/Jest)
    runs-on: [self-hosted, deploy]
    defaults:
      run:
        working-directory: ${{ inputs.WORKING_DIRECTORY }}

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      # Restore Node cache
      - name: Restore `node_modules` - yarn
        uses: actions/cache@v4
        id: node-cache-yarn
        with:
          path: |
            ./node_modules
          key: node-cache-${{ runner.os }}-${{ hashFiles('./yarn.lock') }}

      - name: List Directory Files
        run: ls -la

      # Set Node version (requires .nvmrc file in the root of repository)
      - name: Set Node version
        uses: actions/setup-node@v4
        with:
          node-version-file: ${{ inputs.WORKING_DIRECTORY }}/.nvmrc
          registry-url: "https://npm.pkg.github.com"

      - if: ${{ steps.node-cache-yarn.outputs.cache-hit != 'true' }}
        name: Install NPM dependencies - Yarn
        run: |
          npm install -g yarn
          yarn --frozen-lockfile
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GH_PACKAGES_TOKEN }}

      - name: Run Test command
        run: yarn test

      # CodeCov testing coverage uploads
      - name: Codecov
        if: ${{ inputs.USE_CODECOV }}
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./coverage
          flags: Jest
          name: ${{ inputs.REPO_NAME }}
          fail_ci_if_error: true
          verbose: true

      - name: Upload coverage artifacts to `${{ inputs.WORKING_DIRECTORY }}/coverage/test-artifacts`
        uses: actions/upload-artifact@v4
        if: ${{ inputs.UPLOAD_ARTIFACTS }}
        with:
          name: test-artifacts
          path: ${{ inputs.WORKING_DIRECTORY }}/coverage
