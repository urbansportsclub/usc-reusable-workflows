---
name: Create PR to increment package.json version
on:
  workflow_call:
    inputs:
      release_type:
        description: 'Release type. Possible values: major, minor, patch'
        required: true
        type: string
      package_path:
        description: 'Path to the directory where package.json file is located'
        required: false
        default: '.'
        type: string

permissions:
  contents: write
  pull-requests: write

jobs:
  check_input:
    runs-on: [self-hosted, dind]
    steps:
      - name: Check input
        run: |
          if [[ "${{ inputs.release_type }}" != "major" && "${{ inputs.release_type }}" != "minor" && "${{ inputs.release_type }}" != "patch" ]]; then
            echo "::error::Invalid release type. Possible values are: major, minor, patch."
            exit 1
          fi
          
  create_pr:
    name: Create PR to increment package.json version
    runs-on: [self-hosted, dind]
    needs: [check_input]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Bump version in package.json
        id: bump_version
        run: |
          RELEASE_TYPE=${{ inputs.release_type }}
          echo "Bumping version with type: $RELEASE_TYPE"
          npm version $RELEASE_TYPE --no-git-tag-version --prefix ${{ inputs.package_path }}

      - name: get-npm-version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@v1.3.1

      - name: Setup env variables
        run: |
          echo "BRANCH_TO_PUSH=release/${{ steps.package-version.outputs.current-version }}" >> $GITHUB_ENV
          echo "RELEASE_TAG=${{ steps.package-version.outputs.current-version }}" >> $GITHUB_ENV

      - name: Check if branch exists
        id: check_branch
        run: |
          if git ls-remote --exit-code --heads origin ${{ env.BRANCH_TO_PUSH }}; then
            echo "Branch exists"
            echo "::error::Release branch already exists: ${{ env.BRANCH_TO_PUSH }}"
            exit 1
          fi

      - name: Create branch
        run: |
          git checkout -b ${{ env.BRANCH_TO_PUSH }}
          git push origin ${{ env.BRANCH_TO_PUSH }}

      - name: Bump Version of package.json to ${{ steps.package-version.outputs.current-version }}
        continue-on-error: false
        env:
          PACKAGE_PATH: './package.json'
        run: |
          git config user.email "devops@urbansportsclub.com"
          git config user.name "DevOpsFit"
          # Update the version in package.json using jq
          jq ".version = \"${{ env.RELEASE_TAG}}\"" $PACKAGE_PATH > $PACKAGE_PATH.tmp && mv $PACKAGE_PATH.tmp $PACKAGE_PATH
          git add $PACKAGE_PATH
          git commit -m "bump-version: bump version to '${{ env.RELEASE_TAG }}'"

      - name: Push changes
        run: |
          git push origin ${{ env.BRANCH_TO_PUSH }}

      - name: Create PR
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh pr create -B main -H ${{ env.BRANCH_TO_PUSH }} --title 'Release: ${{ env.RELEASE_TAG }}' --body 'Release: ${{ env.RELEASE_TAG }}' --label 'release'
